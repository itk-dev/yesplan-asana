on: pull_request
name: Review
jobs:
  changelog:
    runs-on: ubuntu-latest
    name: Changelog should be updated
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Git fetch
        run: git fetch

      - name: Check that changelog has been updated.
        run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

  test-composer-install:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ]
    name: Validate composer (${{ matrix.php}})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-
      - name: Validate composer files
        run: composer validate composer.json
      - name: Composer install with exported .env variables
        run: |
          set -a && source .env && set +a
          APP_ENV=prod composer install --no-dev -o

  php-cs-fixer:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ]
    name: PHP Coding Standards Fixer (${{ matrix.php }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: php-cs-fixer
        run: phpdbg -qrr ./vendor/bin/php-cs-fixer fix --dry-run

  validate-doctrine-schema:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://db:db@127.0.0.1:3306/db_test?serverVersion=mariadb-10.5.13
    strategy:
      fail-fast: false
      matrix:
        php: [ "8.1" ]
    name: Validate Doctrine Schema (PHP ${{ matrix.php}})
    services:
      mariadb:
        image: mariadb:10.5.13
        env:
          MYSQL_USER: db
          MYSQL_PASSWORD: db
          MYSQL_DATABASE: db_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: 'Composer install with exported .env variables'
        run: |
          set -a && source .env && set +a
          APP_ENV=prod composer install --no-dev -o
      - name: Run Doctrine Migrations
        run: APP_ENV=prod php bin/console doctrine:migrations:migrate --no-interaction

      - name: Validate Doctrine schema
        run: APP_ENV=prod php bin/console doctrine:schema:validate